{"version":3,"sources":["theme.js","utils/utils.js","hooks/useFetchData.js","config/config.js","components/UI/Loader/Loader.js","components/StatsTable/StatsTableHead/StatsTableHead.js","components/StatsTable/StatsTable.js","containers/AllStats/AllStats.js","components/DataCard/DataCard.js","components/CountryStatsDisplay/CountryStatsDisplay.js","containers/CountryStats/CountryStats.js","App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","type","formatDate","d","year","getFullYear","month","getMonth","day","getDate","length","join","prepareData","country","cases","deaths","tests","testPerCase","total","Math","round","name","newCases","new","replace","activeCases","active","criticalCases","critical","recoveredCases","recovered","totalCases","newDeaths","totalDeaths","totalTests","getPrecentageValue","numerator","denominator","digits","Error","toFixed","useFetchData","useCallback","endPoint","params","fetchParams","paramsString","i","param","paramFormated","formatParams","url","fetch","method","headers","useStyles","makeStyles","loader","display","justifyContent","margin","spacing","Loader","classes","className","CircularProgress","StatsTableHead","props","columns","onRequestSort","order","orderBy","styleClasses","cellStyle","reversedDirection","alignRiht","TableHead","TableRow","map","col","TableCell","sortDirection","id","key","TableSortLabel","direction","onClick","property","event","label","cell","fontWeight","padding","backgroundColor","smallWidth","width","dangerCell","background","error","dark","color","warrningCell","warning","light","successCell","success","alignRight","textAlign","flexDirection","tableRow","action","hover","paper","marginTop","marginBottom","overflow","tableContainer","StatsTable","React","memo","stats","history","useHistory","useState","setOrder","setOrderBy","format","value","Link","href","e","preventDefault","push","handleLinkRedirect","toLocaleString","activeClass","descendingComparator","a","b","getComparator","stableSort","array","comparator","stabilizedThis","el","index","sort","Paper","TableContainer","Table","stickyHeader","aria-label","TableBody","AllStats","countriesStats","setCountriesStats","continentsStats","setContinentsStats","loading","setLoading","fetchStatsData","extractData","data","continents","continentsNames","filter","indexOf","useEffect","fetching","then","response","json","dataFormated","catch","err","console","log","content","Typography","gutterBottom","variant","component","align","mediumBold","danger","muted","grey","DataCard","title","dataElements","Grid","item","xs","difference","container","justify","alignItems","spacingBottom","paddingBottom","CountryStatsDisplay","dataGrid","sm","md","weight","CountryStats","useRouteMatch","countryStats","setCountryStats","historyCountryStats","setHistoryCountryStats","date","Date","selectedDate","setSelectedDate","handleDateChange","dataObj","_d","valueDifference","val1","val2","returnValue","formatToLocaleString","diff","toString","formatCountryData","comapreData","today","countryHistory","isPastDateSelected","countryData","presentData","pastStats","utils","MomentUtils","Box","DatePicker","autoOk","disableFuture","onChange","split","reverse","app","basename","Container","fixed","path","Boolean","window","location","hostname","match","ReactDOM","render","ThemeProvider","CssBaseline","StrictMode","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"gLASeA,EANDC,YAAe,CAC3BC,QAAS,CACPC,KAAM,W,QCLGC,EAAa,SAACC,GACzB,IAAMC,EAAOD,EAAEE,cACXC,EAAQ,IAAMH,EAAEI,WAAa,GAC7BC,EAAM,GAAKL,EAAEM,UAKjB,OAHIH,EAAMI,OAAS,IAAGJ,EAAQ,IAAMA,GAChCE,EAAIE,OAAS,IAAGF,EAAM,IAAMA,GAEzB,CAACJ,EAAME,EAAOE,GAAKG,KAAK,MAIpBC,EAAc,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAC9CC,EAAcH,EAAMI,OAASF,EAAME,MAAQC,KAAKC,MAAMJ,EAAME,MAAQJ,EAAMI,OAAU,KAe1F,MAbmB,CACjBG,KAAMR,EACNS,SAAUR,EAAMS,KAAOT,EAAMS,IAAIC,QAAQ,IAAK,IAAM,KACpDC,YAAaX,EAAMY,OACnBC,cAAeb,EAAMc,SACrBC,eAAgBf,EAAMgB,UACtBC,WAAYjB,EAAMI,MAClBc,UAAWjB,EAAOQ,KAAOR,EAAOQ,IAAIC,QAAQ,IAAK,IAAM,KACvDS,YAAalB,EAAOG,MACpBD,cACAiB,WAAYlB,EAAME,QAOTiB,EAAqB,SAACC,EAAWC,GAA6B,IAAhBC,EAAe,uDAAN,EAClE,GAAyB,kBAAdF,GAAiD,kBAAhBC,EAC1C,MAAME,MAAM,gDAEd,OAASH,EAAYC,EAAe,KAAKG,QAAQF,ICMpCG,EApBM,WAiBnB,OAfoBC,uBAAY,YAA2B,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OACrCC,EAAcD,EAtBH,SAAAA,GACnB,IAAIE,EAAe,GACfC,EAAI,EAER,IAAI,IAAMC,KAASJ,EAAQ,CACzB,IAAIK,EAAgB,GAElBA,GADO,IAANF,EACgB,IAEA,IAGnBD,GADAG,GAAiBD,EAAQ,IAAMJ,EAAOI,GAEtCD,IAGF,OAAOD,EAMwBI,CAAaN,GAAU,KAE9CO,EAAG,2CAAuCR,GAAvC,OAAkDE,GAA4B,IAEvF,OAAOO,MAAMD,EAAK,CAChBE,OAAQ,MACRC,QAAS,CACP,kBAAmB,2BACnB,iBCjCe,0DDoClB,K,kBEhCCC,EAAYC,aAAW,SAAC1D,GAAD,MAAY,CACvC2D,OAAQ,CACNC,QAAS,OACTC,eAAgB,SAChBC,OAAQ9D,EAAM+D,QAAQ,GAAK,YAchBC,EAVA,WACb,IAAMC,EAAUR,IAEhB,OACE,yBAAKS,UAAWD,EAAQN,QACtB,kBAACQ,EAAA,EAAD,Q,iGCoBSC,EA7BQ,SAAAC,GAAU,IACrBC,EAA2CD,EAA3CC,QAASC,EAAkCF,EAAlCE,cAAeC,EAAmBH,EAAnBG,MAAOC,EAAYJ,EAAZI,QADX,cAKsBJ,EAAMK,aAL5B,GAKrBC,EALqB,KAKVC,EALU,KAKSC,EALT,KAM5B,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACGT,EAAQU,KAAI,SAACC,EAAKhC,GAAN,OACX,kBAACiC,EAAA,EAAD,CACEC,cAAeV,IAAYQ,EAAIG,IAAKZ,EACpCa,IAAKJ,EAAIG,GACTlB,UAAW,CAACS,GAAD,mBAAsB,IAAN1B,EAAU,CAAC2B,EAAmBC,GAAa,KAAKhE,KAAK,MAEhF,kBAACyE,EAAA,EAAD,CACE1D,OAAQ6C,IAAYQ,EAAIG,GACxBG,UAAWd,IAAYQ,EAAIG,GAAKZ,EAAQ,MACxCgB,SAhBeC,EAgBYR,EAAIG,GAhBH,SAACM,GACvCnB,EAAcmB,EAAOD,MAiBVR,EAAIU,QAlBS,IAACF,Q,SCIzBhC,EAAYC,aAAW,SAAC1D,GAAD,MAAY,CACvC4F,KAAM,CACJC,WAAY,IACZC,QAAS,WACTC,gBAAiB,eAEnBC,WAAY,CACVC,MAAO,SAETC,WAAY,CACVC,WAAYnG,EAAME,QAAQkG,MAAMC,KAChCC,MAAO,QAETC,aAAc,CACZJ,WAAYnG,EAAME,QAAQsG,QAAQC,OAEpCC,YAAa,CACXP,WAAYnG,EAAME,QAAQyG,QAAQF,OAEpCG,WAAY,CACVC,UAAW,SAEbjC,kBAAmB,CACjBkC,cAAe,eAEjBC,SAAU,CACR,UAAW,CACThB,gBAAiB/F,EAAME,QAAQ8G,OAAOC,QAG1CC,MAAO,CACLC,UAAWnH,EAAM+D,QAAQ,GACzBqD,aAAcpH,EAAM+D,QAAQ,GAC5BsD,SAAU,UAEZC,eAAgB,CACdF,aAAc,YAyJHG,EApJIC,IAAMC,MAAK,YAAgB,IAAbC,EAAY,EAAZA,MAEzBC,EAAUC,cAF2B,EAGjBJ,IAAMK,SAAS,QAHE,mBAGpCrD,EAHoC,KAG7BsD,EAH6B,OAIbN,IAAMK,SAAS,cAJF,mBAIpCpD,EAJoC,KAI3BsD,EAJ2B,KAKrC9D,EAAUR,IASVa,EAAU,CACd,CACEc,GAAI,OACJO,MAAO,UACP1B,QAAS,CAACA,EAAQ2B,MAClBoC,OAAQ,SAAAC,GAAK,MAAc,QAAVA,EAAkB,kBAACC,EAAA,EAAD,CAAMC,KAAK,IAAI3C,QAAS,SAAA4C,GAAC,OAVrC,SAACA,EAAGD,GAC7BC,EAAEC,iBACFV,EAAQW,KAAKH,GAQqDI,CAAmBH,EAAG,YAAcH,KAAWA,GAAgBA,IAEjI,CACE7C,GAAI,aACJO,MAAO,cACP1B,QAAS,CAACA,EAAQ2B,KAAM3B,EAAQ2C,YAChCoB,OAAQ,SAACC,GAAD,OAAYA,EAAQA,EAAMO,iBAAmB,OAEvD,CACEpD,GAAI,WACJO,MAAO,YACP8C,YAAaxE,EAAQsC,aACrBtC,QAAS,CAACA,EAAQ2B,KAAM3B,EAAQ2C,WAAY3C,EAAQ+B,YACpDgC,OAAQ,SAACC,GAAD,OAAYA,EAAQ,IAAMA,EAAMO,iBAAmB,OAE7D,CACEpD,GAAI,YACJO,MAAO,aACP8C,YAAaxE,EAAQiC,WACrBjC,QAAS,CAACA,EAAQ2B,KAAM3B,EAAQ2C,WAAY3C,EAAQ+B,YACpDgC,OAAQ,SAACC,GAAD,OAAYA,EAAQ,IAAMA,EAAMO,iBAAmB,OAE7D,CACEpD,GAAI,cACJO,MAAO,eACP1B,QAAS,CAACA,EAAQ2B,KAAM3B,EAAQ2C,YAChCoB,OAAQ,SAACC,GAAD,OAAYA,EAAQA,EAAMO,iBAAmB,OAEvD,CACEpD,GAAI,cACJO,MAAO,eACP1B,QAAS,CAACA,EAAQ2B,KAAM3B,EAAQ2C,YAChCoB,OAAQ,SAACC,GAAD,OAAYA,EAAQA,EAAMO,iBAAmB,OAEvD,CACEpD,GAAI,gBACJO,MAAO,iBACP1B,QAAS,CAACA,EAAQ2B,KAAM3B,EAAQ2C,YAChCoB,OAAQ,SAACC,GAAD,OAAYA,EAAQA,EAAMO,iBAAmB,OAEvD,CACEpD,GAAI,iBACJO,MAAO,iBACP8C,YAAaxE,EAAQyC,YACrBzC,QAAS,CAACA,EAAQ2B,KAAM3B,EAAQ2C,YAChCoB,OAAQ,SAACC,GAAD,OAAYA,EAAQA,EAAMO,iBAAmB,OAEvD,CACEpD,GAAI,cACJO,MAAO,gBACP1B,QAAS,CAACA,EAAQ2B,KAAM3B,EAAQ2C,YAChCoB,OAAQ,SAACC,GAAD,OAAYA,EAAQA,EAAMO,iBAAmB,OAEvD,CACEpD,GAAI,aACJO,MAAO,cACP1B,QAAS,CAACA,EAAQ2B,KAAM3B,EAAQ2C,YAChCoB,OAAQ,SAACC,GAAD,OAAYA,EAAQA,EAAMO,iBAAmB,QAWnDE,EAAuB9F,uBAAY,SAAC+F,EAAGC,EAAGnE,GAC9C,OAAImE,EAAEnE,GAAWkE,EAAElE,IACT,EAENmE,EAAEnE,GAAWkE,EAAElE,GACV,EAEF,IACN,IAEGoE,EAAgBjG,uBAAY,SAAC4B,EAAOC,GACxC,MAAiB,SAAVD,EACH,SAACmE,EAAGC,GAAJ,OAAUF,EAAqBC,EAAGC,EAAGnE,IACrC,SAACkE,EAAGC,GAAJ,OAAWF,EAAqBC,EAAGC,EAAGnE,MACzC,CAACiE,IAEEI,EAAalG,uBAAY,SAACmG,EAAOC,GACrC,IAAMC,EAAiBF,EAAM/D,KAAI,SAACkE,EAAIC,GAAL,MAAe,CAACD,EAAIC,MAMrD,OALAF,EAAeG,MAAK,SAACT,EAAGC,GACtB,IAAMpE,EAAQwE,EAAWL,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAVpE,EAAoBA,EACjBmE,EAAE,GAAKC,EAAE,MAEXK,EAAejE,KAAI,SAACkE,GAAD,OAAQA,EAAG,QACpC,IAEH,OACE,kBAACG,EAAA,EAAD,CAAOnF,UAAWD,EAAQiD,OACxB,kBAACoC,EAAA,EAAD,CAAgBpF,UAAWD,EAAQqD,gBACjC,kBAACiC,EAAA,EAAD,CAAOC,cAAY,EAACC,aAAW,gBAC7B,kBAAC,EAAD,CACElF,cAtCgB,SAACmB,EAAOD,GAEhCqC,EADcrD,IAAYgB,GAAsB,QAAVjB,EACrB,OAAS,OAC1BuD,EAAWtC,IAoCHnB,QAASA,EACTE,MAAOA,EACPC,QAASA,EACTC,aAAc,CAACT,EAAQ2B,KAAM3B,EAAQW,kBAAmBX,EAAQ2C,cAElE,kBAAC8C,EAAA,EAAD,KACGZ,EAAWpB,EAAOmB,EAAcrE,EAAOC,IAAUO,KAAI,SAACkE,EAAIjG,GACzD,OACE,kBAAC8B,EAAA,EAAD,CAAUb,UAAWD,EAAQ8C,SAAU1B,IAAKpC,GACzCqB,EAAQU,KAAI,SAACC,GACZ,IAAMf,EAAS,sBAAOe,EAAIhB,SAAX,CAAqBgB,EAAIwD,aAAeS,EAAGjE,EAAIG,IAAMH,EAAIwD,YAAc,OAEtF,OACE,kBAACvD,EAAA,EAAD,CAAWG,IAAKJ,EAAIG,GAAIlB,UAAWA,EAAUrD,KAAK,MAC/CoE,EAAI+C,OAAS/C,EAAI+C,OAAOkB,EAAGjE,EAAIG,KAAO8D,EAAGjE,EAAIG,mBCjGvDuE,EAlFE,WAAO,IAAD,EAEuB9B,mBAAS,MAFhC,mBAEd+B,EAFc,KAEEC,EAFF,OAGyBhC,mBAAS,MAHlC,mBAGdiC,EAHc,KAGGC,EAHH,OAISlC,oBAAS,GAJlB,mBAIdmC,EAJc,KAILC,EAJK,KAKfC,EAAiBvH,IAGjBwH,EAAcvH,uBAAY,SAACwH,GAC/B,IAAMC,EAAa,GAEbC,EAAkB,CAAC,gBAAiB,SAAU,OAAQ,gBAAiB,UAAW,UAcxF,MAAO,CAZSF,EAAKG,QAAO,SAAArB,GAC1B,OAAGoB,EAAgBE,QAAQtB,EAAG3H,OAAS,GACrC8I,EAAW/B,KAAKY,IACT,IAES,QAAZA,EAAG3H,MACL8I,EAAW/B,KAAKY,IAEX,MAIMmB,KAChB,IAEHI,qBAAU,WACR,IAAIC,GAAW,EAwBf,OAtBAT,GAAW,GACXC,EAAe,CACbrH,SAAU,eAEX8H,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACP,GAAU,IAETU,EADeV,EAAbQ,SACsB5F,KAAI,SAACjE,GAAD,OAAaD,EAAYC,MAF7C,EAIgBoJ,EAAYW,GAJ5B,mBAIP/J,EAJO,KAIEsJ,EAJF,KAMVK,IACFb,EAAkB9I,GAClBgJ,EAAmBM,GACnBJ,GAAW,OAGdc,OAAM,SAACC,GACNf,GAAW,GACXgB,QAAQC,IAAIF,MAGP,kBAAMN,GAAW,KACvB,CAACP,EAAaD,IAEjB,IAAIiB,EAAU,KAqBd,OAnBInB,IACFmB,EAAU,kBAAC,EAAD,OAGRvB,GAAkBE,IACpBqB,EACE,kBAAC,WAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAKC,MAAM,UAA3D,uBAGA,kBAAC,EAAD,CAAY9D,MAAOkC,IACnB,kBAACwB,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAKC,MAAM,UAA3D,wBAGA,kBAAC,EAAD,CAAY9D,MAAOoC,MAKlBqB,G,oEChFH1H,EAAYC,aAAW,SAAC1D,GAAD,MAAY,CACvC+D,QAAS,CACP+B,QAAS9F,EAAM+D,QAAQ,IAEzB4C,QAAS,CACPL,MAAOtG,EAAME,QAAQyG,QAAQN,MAE/BoF,WAAY,CACV5F,WAAY,KAEd6F,OAAQ,CACNpF,MAAOtG,EAAME,QAAQkG,MAAMC,MAE7BsF,MAAO,CACLrF,MAAOtG,EAAME,QAAQ0L,KAAK,UA+CfC,EA3CE,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,MAAO1B,EAA2B,EAA3BA,KAA2B,IAArBjK,YAAqB,MAAd,QAAc,EAC9C8D,EAAUR,IAEVsI,EAAe3B,EAAKpF,KAAI,SAACkE,EAAIjG,GAAL,OAC5B,kBAAC+I,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG7G,IAAKpC,GACrB,kBAACmI,EAAA,EAAD,CAAYE,QAAQ,YAAYC,UAAU,IAAIC,MAAOvI,EAAI,EAAI,QAAU,OAAQiB,UAAWD,EAAQ9D,IAC/F+I,EAAGvD,OAEN,kBAACyF,EAAA,EAAD,CAAYE,QAAQ,KAAKC,UAAU,IAAIC,MAAOvI,EAAI,EAAI,QAAU,OAAQiB,UAAW,CAACD,EAAQ9D,GAAO8D,EAAQwH,YAAY5K,KAAK,MACzHqI,EAAGjB,OAELiB,EAAGiD,WACF,kBAAC,WAAD,KACE,kBAACf,EAAA,EAAD,CAAYE,QAAQ,YAAYC,UAAU,IAAIC,MAAOvI,EAAI,EAAI,QAAU,OAAQiB,UAAWD,EAAQ9D,IAAlG,cAGA,kBAACiL,EAAA,EAAD,CAAYE,QAAQ,KAAKC,UAAU,IAAIC,MAAOvI,EAAI,EAAI,QAAU,OAAQiB,UAAW,CAACD,EAAQ9D,GAAO8D,EAAQwH,YAAY5K,KAAK,MACzHqI,EAAGiD,aAIV,SAIJ,OACE,kBAAC9C,EAAA,EAAD,CAAOnF,UAAWD,EAAQF,SACxB,kBAACqH,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAKC,MAAM,UACxDM,GAEH,kBAACE,EAAA,EAAD,CACEI,WAAS,EACT7G,UAAU,MACV8G,QAAQ,gBACRC,WAAW,UAEVP,KCtDHtI,EAAYC,aAAW,SAAC1D,GAAD,MAAY,CACvCuM,cAAe,CACbC,cAAexM,EAAM+D,QAAQ,QA6ClB0I,EAzCa,SAAC,GAAqB,IAAnBrC,EAAkB,EAAlBA,KAAM0B,EAAY,EAAZA,MAC7B7H,EAAUR,IAEViJ,EAAWtC,EAAKpF,KAAI,WAAsB/B,GAAO,IAA3B6I,EAA0B,EAA1BA,MAAO1B,EAAmB,EAAnBA,KAAMjK,EAAa,EAAbA,KACvC,OACE,kBAAC6L,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIS,GAAI,EAAGC,GAAI,EAAGvH,IAAKpC,GACpC,kBAAC,EAAD,CACE6I,MAAOA,EACP1B,KAAMA,EACNjK,KAAMA,QAMd,OACE,kBAAC,WAAD,KACG2L,EACC,kBAACV,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAKC,MAAM,SAASqB,OAAO,OACxEf,GAGH,KAGF,kBAACE,EAAA,EAAD,CACEI,WAAS,EACTrI,QAAS,EACTwB,UAAU,MACV8G,QAAQ,aACRC,WAAW,UACXpI,UAAWD,EAAQsI,eAElBG,KChCHjJ,EAAYC,aAAW,SAAC1D,GAAD,MAAY,CACvCuM,cAAe,CACbnF,aAAcpH,EAAM+D,QAAQ,QA4NjB+I,EAvNM,SAAAzI,GAAU,IACrBvB,EAAWiK,cAAXjK,OACF6E,EAAUC,cACV3D,EAAUR,IAHY,EAKYoE,mBAAS,MALrB,mBAKrBmF,EALqB,KAKPC,EALO,OAM0BpF,mBAAS,MANnC,mBAMrBqF,EANqB,KAMAC,EANA,OAOEtF,oBAAS,GAPX,mBAOrBmC,EAPqB,KAOZC,EAPY,OAQYpC,mBAAS/E,EAAOsK,KAAOtK,EAAOsK,KAAOhN,EAAW,IAAIiN,OARhE,mBAQrBC,EARqB,KAQPC,EARO,KAStBrD,EAAiBvH,IAEjB6K,EAAmB5K,uBAAY,SAAC6K,GACpC,IAAML,EAAOhN,EAAWqN,EAAQC,IACxBnM,EAASuB,EAATvB,KACRoG,EAAQW,KAAR,mBAAyB/G,EAAzB,YAAiC6L,IACjCG,EAAgBH,KACf,CAACG,EAAiB5F,EAASvH,EAAY0C,IA4E1C,SAAS6K,EAAgBC,EAAMC,GAAqC,IAC9DC,EAD+BC,EAA8B,wDAE7DC,EAAOJ,EAAOC,EAYlB,OAVIG,IADAA,EAAOA,EAAKtL,QAAQ,IACPuL,WAAWvM,QAAQ,MAAO,IAIzCoM,EADEC,EACYC,EAAKxF,iBAELwF,EAITA,EAAO,EAAI,IAAMF,EAAcA,EAIxC,SAASI,EAAkB9D,GAA2B,IAArB+D,EAAoB,uDAAN,KAC7C,MAAO,CACL,CACErC,MAAO,QACP1B,KAAM,CACJ,CACEzE,MAAO,QACPsC,MAAOmC,EAAKnI,WAAWuG,iBACvB2D,WAAYgC,EAAcR,EAAgBvD,EAAKnI,WAAYkM,EAAYlM,YAAY,GAAQ,MAE7F,CACE0D,MAAO,SACPsC,MAAOmC,EAAKzI,YAAY6G,iBACxB2D,WAAYgC,EAAcR,EAAgBvD,EAAKzI,YAAawM,EAAYxM,aAAa,GAAQ,QAInG,CACEmK,MAAO,SACP1B,KAAM,CACJ,CACEzE,MAAO,QACPsC,MAAOmC,EAAKjI,YAAYqG,iBACxB2D,WAAYgC,EAAcR,EAAgBvD,EAAKjI,YAAagM,EAAYhM,aAAa,GAAQ,MAE/F,CACEwD,MAAO,iBACPsC,MAAO5F,EAAmB+H,EAAKjI,YAAaiI,EAAKnI,YAAc,IAC/DkK,WAAYgC,EAAcR,EAAgBtL,EAAmB+H,EAAKjI,YAAaiI,EAAKnI,YAAaI,EAAmB8L,EAAYhM,YAAagM,EAAYlM,aAAe,IAAM,OAGlL9B,KAAM,UAER,CACE2L,MAAO,kBACP1B,KAAM,CACJ,CACEzE,MAAO,QACPsC,MAAOmC,EAAKrI,eAAeyG,iBAC3B2D,WAAYgC,EAAcR,EAAgBvD,EAAKrI,eAAgBoM,EAAYpM,gBAAgB,GAAQ,MAErG,CACE4D,MAAO,iBACPsC,MAAO5F,EAAmB+H,EAAKrI,eAAgBqI,EAAKnI,YAAc,IAClEkK,WAAYgC,EAAcR,EAAgBtL,EAAmB+H,EAAKrI,eAAgBqI,EAAKnI,YAAaI,EAAmB8L,EAAYpM,eAAgBoM,EAAYlM,aAAe,IAAM,OAGxL9B,KAAM,YA3IZsK,qBAAU,WACR,IAAIC,GAAW,EAERnJ,EAAQuB,EAARvB,KAEP0I,GAAW,GACXkD,EAAuB,MACvB,IAAMiB,EAAQhO,EAAW,IAAIiN,MACzBgB,EAAiB,KACjBrB,EAAe,KAEbsB,EAAqBF,IAAUd,EA2DrC,OAzDA,sBAAC,sBAAA3E,EAAA,0DACK2F,EADL,gCAE0BpE,EAAe,CACpCrH,SAAU,UACVC,OAAQ,CACN/B,QAASQ,EACTb,IAAK4M,KAGR3C,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACP,GAAU,IACPQ,EAAaR,EAAbQ,SAER,GAAIF,EAAU,CAAC,IACN6D,EADK,YACU3D,EADV,MAGZ,OAAO9J,EAAYyN,OAItBxD,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZf,GAAW,MAtBhB,OAEGoE,EAFH,8BA0BsBnE,EAAe,CAClCrH,SAAU,aACVC,OAAQ,CACN/B,QAASQ,KAGZoJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACP,GAAU,IACPQ,EAAaR,EAAbQ,SAER,GAAIF,EAAU,CAAC,IACN6D,EADK,YACU3D,EADV,MAGZ,OAAO9J,EAAYyN,OAItBxD,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZf,GAAW,MA7Cd,OA0BC+C,EA1BD,OAiDKsB,GACFnB,EAAuBkB,GAEzBpB,EAAgBD,GAChB/C,GAAW,GArDZ,2CAAD,GAyDO,kBAAMS,GAAW,KACvB,CAAC5H,EAAQ6E,EAASuC,EAAgBoD,EAAclN,IA0EnD,IASMoO,EATFrD,EAAU,KACVsD,EAAY,MAEZzE,IACFmB,EAAU,kBAAC,EAAD,OAGR6B,KAIEE,GAEFsB,EAAcN,EAAkBlB,GAChCyB,EAAYP,EAAkBhB,EAAqBF,IAGnDwB,EAAcN,EAAkBlB,GAGlC7B,EACE,kBAAC,WAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAKC,MAAM,SAASqB,OAAO,OACxEG,EAAazL,MAGhB,kBAAC,IAAD,CAAyBmN,MAAOC,KAC9B,kBAACC,EAAA,EAAD,CAAKrD,UAAU,MAAMC,MAAM,SAAStH,UAAWD,EAAQsI,eACrD,kBAACsC,EAAA,EAAD,CACEC,QAAM,EACNnJ,MAAM,cACNoJ,eAAa,EACb9G,MAAOqF,EACP0B,SAAUxB,MAKfN,EAAsB,kBAAC,EAAD,CAAqB9C,KAAMqE,EAAW3C,MAAO,aAAewB,EAAa2B,MAAM,KAAKC,UAAUrO,KAAK,OAAW,KAGrI,kBAAC,EAAD,CAAqBuJ,KAAMoE,EAAa1C,MAAOoB,EAAsB,qBAAuB,SAQlG,OAAO/B,G,iBChNMgE,EAjBH,kBACV,kBAAC,IAAD,CAAeC,SAAS,4BACtB,kBAACC,EAAA,EAAD,CAAWC,OAAK,GACd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,yBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,WCHUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAACC,EAAA,EAAD,CAAe/P,MAAOA,GACpB,kBAACgQ,EAAA,EAAD,MACA,kBAAC,IAAMC,WAAP,KACE,kBAACC,EAAD,QAGJC,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5F,MAAK,SAAA6F,GACJA,EAAaC,gBAEd1F,OAAM,SAAA3E,GACL6E,QAAQ7E,MAAMA,EAAMsK,a","file":"static/js/main.ba2e1acd.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: 'light'\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","export const formatDate = (d) => {\r\n  const year = d.getFullYear();\r\n  let month = \"\" + (d.getMonth() + 1);\r\n  let day = \"\" + d.getDate();\r\n\r\n  if (month.length < 2) month = \"0\" + month;\r\n  if (day.length < 2) day = \"0\" + day;\r\n\r\n  return [year, month, day].join(\"-\");\r\n}\r\n\r\n\r\nexport const prepareData = ({ country, cases, deaths, tests }) => {\r\n  const testPerCase = cases.total && tests.total ? Math.round(tests.total / cases.total ) : null;\r\n\r\n  const dataObject = {\r\n    name: country,\r\n    newCases: cases.new ? +cases.new.replace(\"+\", \"\") : null,\r\n    activeCases: cases.active,\r\n    criticalCases: cases.critical,\r\n    recoveredCases: cases.recovered,\r\n    totalCases: cases.total,\r\n    newDeaths: deaths.new ? +deaths.new.replace(\"+\", \"\") : null,\r\n    totalDeaths: deaths.total,\r\n    testPerCase,\r\n    totalTests: tests.total\r\n  };\r\n\r\n  return dataObject;\r\n};\r\n\r\n\r\nexport const getPrecentageValue = (numerator, denominator, digits = 2) => {\r\n  if (typeof numerator !== 'number' || typeof denominator !== 'number') {\r\n    throw Error('numerator and denominator have to be numbers');\r\n  }\r\n  return ((numerator / denominator) * 100).toFixed(digits);\r\n}","import { useCallback } from \"react\";\r\nimport { API_KEY } from '../config/config';\r\n\r\nconst formatParams = params => {\r\n  let paramsString = '';\r\n  let i = 0;\r\n\r\n  for(const param in params) {\r\n    let paramFormated = '';\r\n    if(i === 0) {\r\n      paramFormated += '?';\r\n    } else {\r\n      paramFormated += '&';\r\n    }\r\n    paramFormated += param + '=' + params[param];\r\n    paramsString += paramFormated;\r\n    i++;\r\n  }\r\n\r\n  return paramsString;\r\n}\r\n\r\nconst useFetchData = () => {\r\n\r\n  const sendRequest = useCallback(({ endPoint, params }) => {\r\n    const fetchParams = params ? formatParams(params) : null;\r\n\r\n    const url = `https://covid-193.p.rapidapi.com/${endPoint}${fetchParams ? fetchParams : ''}`;\r\n\r\n    return fetch(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": API_KEY,\r\n      },\r\n    })\r\n  }, [])\r\n    \r\n\r\n  return sendRequest;\r\n}\r\n\r\nexport default useFetchData;","export const API_KEY = \"4de95ab09fmshdc2a5620db4c9cbp1450cejsn4d7548155300\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  loader: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    margin: theme.spacing(3) + 'px 0'\r\n  },\r\n}));\r\n\r\nconst Loader = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.loader}>\r\n      <CircularProgress />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader;","import React from \"react\";\r\n\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\n\r\n\r\nconst StatsTableHead = props => {\r\n    const { columns, onRequestSort, order, orderBy } = props;\r\n    const createSortHandler = (property) => (event) => {\r\n      onRequestSort(event, property);\r\n    };\r\n    const [cellStyle, reversedDirection, alignRiht] = props.styleClasses;\r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          {columns.map((col, i) => (\r\n            <TableCell\r\n              sortDirection={orderBy === col.id ? order : false}\r\n              key={col.id}\r\n              className={[cellStyle, ...(i !== 0 ? [reversedDirection, alignRiht] : [])].join(' ')}\r\n            >\r\n              <TableSortLabel\r\n                active={orderBy === col.id}\r\n                direction={orderBy === col.id ? order : \"asc\"}\r\n                onClick={createSortHandler(col.id)}\r\n              >\r\n                {col.label}\r\n              </TableSortLabel>\r\n            </TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n}\r\n\r\nexport default StatsTableHead;","import React, { useCallback } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Link from '@material-ui/core/Link';\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nimport StatsTableHead from './StatsTableHead/StatsTableHead';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cell: {\r\n    fontWeight: 500,\r\n    padding: '8px 12px',\r\n    backgroundColor: 'transparent'\r\n  },\r\n  smallWidth: {\r\n    width: '100px'\r\n  },\r\n  dangerCell: {\r\n    background: theme.palette.error.dark,\r\n    color: '#fff'\r\n  },\r\n  warrningCell: {\r\n    background: theme.palette.warning.light\r\n  },\r\n  successCell: {\r\n    background: theme.palette.success.light\r\n  },\r\n  alignRight: {\r\n    textAlign: 'right'\r\n  },\r\n  reversedDirection: {\r\n    flexDirection: 'row-reverse'\r\n  },\r\n  tableRow: {\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.action.hover\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(4),\r\n    overflow: 'hidden'\r\n  },\r\n  tableContainer: {\r\n    marginBottom: '-1px'\r\n  }\r\n}));\r\n\r\n\r\nconst StatsTable = React.memo(({ stats }) => {\r\n\r\n  const history = useHistory();\r\n  const [order, setOrder] = React.useState(\"desc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"totalCases\");\r\n  const classes = useStyles();\r\n\r\n\r\n\r\n  const handleLinkRedirect = (e, href) => {\r\n    e.preventDefault();\r\n    history.push(href);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      id: \"name\",\r\n      label: \"Country\",\r\n      classes: [classes.cell],\r\n      format: value => value !== 'All' ? <Link href=\"#\" onClick={e => handleLinkRedirect(e, \"/country/\" + value ) }>{value}</Link> : value\r\n    },\r\n    {\r\n      id: \"totalCases\",\r\n      label: \"Total cases\",\r\n      classes: [classes.cell, classes.alignRight],\r\n      format: (value) => (value ? value.toLocaleString() : null),\r\n    },\r\n    {\r\n      id: \"newCases\",\r\n      label: \"New cases\",\r\n      activeClass: classes.warrningCell,\r\n      classes: [classes.cell, classes.alignRight, classes.smallWidth],\r\n      format: (value) => (value ? \"+\" + value.toLocaleString() : null),\r\n    },\r\n    {\r\n      id: \"newDeaths\",\r\n      label: \"New deaths\",\r\n      activeClass: classes.dangerCell,\r\n      classes: [classes.cell, classes.alignRight, classes.smallWidth],\r\n      format: (value) => (value ? \"+\" + value.toLocaleString() : null),\r\n    },\r\n    {\r\n      id: \"totalDeaths\",\r\n      label: \"Total deaths\",\r\n      classes: [classes.cell, classes.alignRight],\r\n      format: (value) => (value ? value.toLocaleString() : null),\r\n    },\r\n    {\r\n      id: \"activeCases\",\r\n      label: \"Active cases\",\r\n      classes: [classes.cell, classes.alignRight],\r\n      format: (value) => (value ? value.toLocaleString() : null),\r\n    },\r\n    {\r\n      id: \"criticalCases\",\r\n      label: \"Critical cases\",\r\n      classes: [classes.cell, classes.alignRight],\r\n      format: (value) => (value ? value.toLocaleString() : null),\r\n    },\r\n    {\r\n      id: \"recoveredCases\",\r\n      label: \"Revoered cases\",\r\n      activeClass: classes.successCell,\r\n      classes: [classes.cell, classes.alignRight],\r\n      format: (value) => (value ? value.toLocaleString() : null),\r\n    },\r\n    {\r\n      id: \"testPerCase\",\r\n      label: \"Test per case\",\r\n      classes: [classes.cell, classes.alignRight],\r\n      format: (value) => (value ? value.toLocaleString() : null),\r\n    },\r\n    {\r\n      id: \"totalTests\",\r\n      label: \"Total tests\",\r\n      classes: [classes.cell, classes.alignRight],\r\n      format: (value) => (value ? value.toLocaleString() : null),\r\n    },\r\n  ];\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n\r\n  const descendingComparator = useCallback((a, b, orderBy) => {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }, [])\r\n\r\n  const getComparator = useCallback((order, orderBy) => {\r\n    return order === \"desc\"\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n  }, [descendingComparator]);\r\n\r\n  const stableSort = useCallback((array, comparator) => {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n  }, []);\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <TableContainer className={classes.tableContainer}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <StatsTableHead\r\n            onRequestSort={handleRequestSort}\r\n            columns={columns}\r\n            order={order}\r\n            orderBy={orderBy}\r\n            styleClasses={[classes.cell, classes.reversedDirection, classes.alignRight]}\r\n          />\r\n          <TableBody>\r\n            {stableSort(stats, getComparator(order, orderBy)).map((el, i) => {\r\n              return (\r\n                <TableRow className={classes.tableRow} key={i}>\r\n                  {columns.map((col) => {\r\n                    const className = [...col.classes, (col.activeClass && el[col.id] ? col.activeClass : null)];\r\n\r\n                    return (\r\n                      <TableCell key={col.id} className={className.join(' ')}>\r\n                        {col.format ? col.format(el[col.id]) : el[col.id]}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n    \r\n  );\r\n});\r\n\r\nexport default StatsTable;","import React, { useState, useEffect, useCallback, Fragment } from 'react';\r\nimport { prepareData } from '../../utils/utils';\r\nimport useFetchData from '../../hooks/useFetchData';\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport StatsTable from '../../components/StatsTable/StatsTable';\r\n\r\n\r\nconst AllStats = () => {\r\n\r\n  const [countriesStats, setCountriesStats] = useState(null);\r\n  const [continentsStats, setContinentsStats] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const fetchStatsData = useFetchData();\r\n\r\n\r\n  const extractData = useCallback((data) => {\r\n    const continents = [];\r\n\r\n    const continentsNames = ['North-America', 'Europe', 'Asia', 'South-America', 'Oceania', 'Africa'];\r\n\r\n    const country = data.filter(el => {\r\n      if(continentsNames.indexOf(el.name) >= 0) {\r\n        continents.push(el);\r\n        return false;\r\n      } else {\r\n        if (el.name === 'All') {\r\n          continents.push(el);\r\n        } \r\n        return true;\r\n      }\r\n    })\r\n\r\n    return [country, continents];\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    let fetching = true;\r\n\r\n    setLoading(true);\r\n    fetchStatsData({\r\n      endPoint: 'statistics'\r\n    })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      const { response } = data;\r\n      const dataFormated = response.map((country) => prepareData(country));\r\n\r\n      const [country, continents] = extractData(dataFormated);\r\n\r\n      if (fetching) {\r\n        setCountriesStats(country);\r\n        setContinentsStats(continents);\r\n        setLoading(false);\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      setLoading(false);\r\n      console.log(err);\r\n    });\r\n\r\n    return () => fetching = false;\r\n  }, [extractData, fetchStatsData]);\r\n\r\n  let content = null;\r\n\r\n  if (loading) {\r\n    content = <Loader />;\r\n  }\r\n\r\n  if (countriesStats && continentsStats) {\r\n    content = (\r\n      <Fragment>\r\n        <Typography gutterBottom variant=\"h4\" component=\"h2\" align=\"center\">\r\n          Stats for countries\r\n        </Typography>\r\n        <StatsTable stats={countriesStats} />\r\n        <Typography gutterBottom variant=\"h4\" component=\"h2\" align=\"center\">\r\n          Stats for continents\r\n        </Typography>\r\n        <StatsTable stats={continentsStats} />\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  return content;\r\n\r\n};\r\n\r\n\r\nexport default AllStats;","import React, { Fragment } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  spacing: {\r\n    padding: theme.spacing(2)\r\n  },\r\n  success: {\r\n    color: theme.palette.success.dark\r\n  },\r\n  mediumBold: {\r\n    fontWeight: 500\r\n  },\r\n  danger: {\r\n    color: theme.palette.error.dark\r\n  },\r\n  muted: {\r\n    color: theme.palette.grey['600']\r\n  }\r\n}))\r\n\r\nconst DataCard = ({ title, data, type = 'muted' }) => {\r\n  const classes = useStyles();\r\n\r\n  const dataElements = data.map((el, i) => (\r\n    <Grid item xs={6} key={i}>\r\n      <Typography variant=\"subtitle1\" component=\"p\" align={i > 0 ? 'right' : 'left'} className={classes[type]}>\r\n        {el.label}\r\n      </Typography>\r\n      <Typography variant=\"h5\" component=\"p\" align={i > 0 ? 'right' : 'left'} className={[classes[type], classes.mediumBold].join(' ')}>\r\n        {el.value}\r\n      </Typography>\r\n      {el.difference ? \r\n        <Fragment>\r\n          <Typography variant=\"subtitle1\" component=\"p\" align={i > 0 ? 'right' : 'left'} className={classes[type]}>\r\n            Difference\r\n          </Typography>\r\n          <Typography variant=\"h5\" component=\"p\" align={i > 0 ? 'right' : 'left'} className={[classes[type], classes.mediumBold].join(' ')}>\r\n            {el.difference}\r\n          </Typography>\r\n        </Fragment>\r\n      :\r\n      null}\r\n    </Grid>\r\n  ))\r\n\r\n  return (\r\n    <Paper className={classes.spacing}>\r\n      <Typography gutterBottom variant=\"h5\" component=\"h2\" align=\"center\">\r\n        {title}\r\n      </Typography>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        {dataElements}\r\n      </Grid>\r\n    </Paper>\r\n  )\r\n \r\n}\r\n\r\nexport default DataCard;","import React, { Fragment } from 'react';\r\nimport DataCard from '../../components/DataCard/DataCard';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  spacingBottom: {\r\n    paddingBottom: theme.spacing(3)\r\n  },\r\n}))\r\n\r\nconst CountryStatsDisplay = ({ data, title }) => {\r\n  const classes = useStyles();\r\n\r\n  const dataGrid = data.map(({title, data, type}, i) => {\r\n    return (\r\n      <Grid item xs={12} sm={6} md={4} key={i}>\r\n        <DataCard\r\n          title={title}\r\n          data={data}\r\n          type={type}\r\n        />\r\n      </Grid>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <Fragment>\r\n      {title ? \r\n        <Typography gutterBottom variant=\"h4\" component=\"h2\" align=\"center\" weight=\"700\">\r\n          {title}\r\n        </Typography>\r\n      :\r\n        null\r\n      }\r\n     \r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"stretch\"\r\n        className={classes.spacingBottom}\r\n      >\r\n        {dataGrid}\r\n      </Grid>\r\n    </Fragment>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default CountryStatsDisplay;","import React, { useState, useEffect, useCallback, Fragment } from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { prepareData, getPrecentageValue, formatDate } from \"../../utils/utils\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useFetchData from '../../hooks/useFetchData';\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { DatePicker, MuiPickersUtilsProvider  } from \"@material-ui/pickers\";\r\nimport MomentUtils from '@date-io/moment';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CountryStatsDisplay from '../../components/CountryStatsDisplay/CountryStatsDisplay';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  spacingBottom: {\r\n    marginBottom: theme.spacing(2)\r\n  }\r\n}))\r\n\r\n\r\nconst CountryStats = props => {\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const [countryStats, setCountryStats] = useState(null);\r\n  const [historyCountryStats, setHistoryCountryStats] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(params.date ? params.date : formatDate(new Date()));\r\n  const fetchStatsData = useFetchData();\r\n\r\n  const handleDateChange = useCallback((dataObj) => {\r\n    const date = formatDate(dataObj._d);\r\n    const { name } = params;\r\n    history.push(`/country/${name}/${date}`);\r\n    setSelectedDate(date);\r\n  }, [setSelectedDate, history, formatDate, params]);\r\n    \r\n  useEffect(() => {\r\n    let fetching = true;\r\n\r\n    const {name} = params;\r\n\r\n    setLoading(true);\r\n    setHistoryCountryStats(null);\r\n    const today = formatDate(new Date());\r\n    let countryHistory = null;\r\n    let countryStats = null;\r\n\r\n    const isPastDateSelected = today !== selectedDate;\r\n\r\n    (async () => {\r\n      if (isPastDateSelected) {\r\n        countryHistory = await fetchStatsData({\r\n          endPoint: 'history',\r\n          params: {\r\n            country: name,\r\n            day: selectedDate\r\n          }\r\n        })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const { response } = data;\r\n\r\n          if (fetching) {\r\n            const [countryData] = response;\r\n\r\n            return prepareData(countryData);\r\n          }\r\n\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setLoading(false);\r\n        });\r\n      }\r\n\r\n      countryStats = await fetchStatsData({\r\n        endPoint: 'statistics',\r\n        params: {\r\n          country: name\r\n        }\r\n      })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const { response } = data;\r\n\r\n        if (fetching) {\r\n          const [countryData] = response;\r\n\r\n          return prepareData(countryData);\r\n        }\r\n\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoading(false);\r\n      });\r\n\r\n\r\n      if (isPastDateSelected) {\r\n        setHistoryCountryStats(countryHistory);\r\n      }\r\n      setCountryStats(countryStats);\r\n      setLoading(false);\r\n    })();\r\n\r\n\r\n    return () => fetching = false;\r\n  }, [params, history, fetchStatsData, selectedDate, formatDate]);\r\n\r\n\r\n  function valueDifference(val1, val2, formatToLocaleString = false) {\r\n    let returnValue;\r\n    let diff = val1 - val2;\r\n        diff = diff.toFixed(2);\r\n        diff = +diff.toString().replace('.00', '');\r\n\r\n      \r\n    if (formatToLocaleString) {\r\n      returnValue = diff.toLocaleString();\r\n    } else {\r\n      returnValue = diff;\r\n    }\r\n    \r\n\r\n    return diff > 0 ? '+' + returnValue : returnValue;\r\n  }\r\n\r\n\r\n  function formatCountryData(data, comapreData = null) {\r\n    return [\r\n      {\r\n        title: \"Cases\",\r\n        data: [\r\n          {\r\n            label: 'Total',\r\n            value: data.totalCases.toLocaleString(),\r\n            difference: comapreData ? valueDifference(data.totalCases, comapreData.totalCases, true) : null\r\n          },\r\n          {\r\n            label: 'Active',\r\n            value: data.activeCases.toLocaleString(),\r\n            difference: comapreData ? valueDifference(data.activeCases, comapreData.activeCases, true) : null\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        title: \"Deaths\",\r\n        data: [\r\n          {\r\n            label: 'Total',\r\n            value: data.totalDeaths.toLocaleString(),\r\n            difference: comapreData ? valueDifference(data.totalDeaths, comapreData.totalDeaths, true) : null\r\n          },\r\n          {\r\n            label: 'Lethality rate',\r\n            value: getPrecentageValue(data.totalDeaths, data.totalCases) + '%',\r\n            difference: comapreData ? valueDifference(getPrecentageValue(data.totalDeaths, data.totalCases), getPrecentageValue(comapreData.totalDeaths, comapreData.totalCases)) + '%' : null\r\n          }\r\n        ],\r\n        type: \"danger\"\r\n      },\r\n      {\r\n        title: \"Recovered cases\",\r\n        data: [\r\n          {\r\n            label: 'Total',\r\n            value: data.recoveredCases.toLocaleString(),\r\n            difference: comapreData ? valueDifference(data.recoveredCases, comapreData.recoveredCases, true) : null\r\n          },\r\n          {\r\n            label: 'Recovered rate',\r\n            value: getPrecentageValue(data.recoveredCases, data.totalCases) + '%',\r\n            difference: comapreData ? valueDifference(getPrecentageValue(data.recoveredCases, data.totalCases), getPrecentageValue(comapreData.recoveredCases, comapreData.totalCases)) + '%' : null\r\n          }\r\n        ],\r\n        type: \"success\"\r\n      }\r\n    ]\r\n  }\r\n\r\n\r\n  let content = null;\r\n  let pastStats = null;\r\n\r\n  if (loading) {\r\n    content = <Loader />;\r\n  }\r\n\r\n  if (countryStats) {\r\n\r\n    let presentData;\r\n\r\n    if (historyCountryStats) {\r\n\r\n      presentData = formatCountryData(countryStats);\r\n      pastStats = formatCountryData(historyCountryStats, countryStats);\r\n\r\n    } else {\r\n      presentData = formatCountryData(countryStats);\r\n    }\r\n\r\n    content = (\r\n      <Fragment>\r\n        <Typography gutterBottom variant=\"h3\" component=\"h1\" align=\"center\" weight=\"700\">\r\n          {countryStats.name}\r\n        </Typography>\r\n      \r\n        <MuiPickersUtilsProvider utils={MomentUtils}>\r\n          <Box component=\"div\" align=\"center\" className={classes.spacingBottom} >\r\n            <DatePicker\r\n              autoOk\r\n              label=\"Select date\"\r\n              disableFuture\r\n              value={selectedDate}\r\n              onChange={handleDateChange}\r\n            />\r\n          </Box>\r\n        </MuiPickersUtilsProvider>\r\n\r\n        {historyCountryStats ? <CountryStatsDisplay data={pastStats} title={'Data from ' + selectedDate.split('-').reverse().join('.')} /> : null}\r\n\r\n        \r\n        <CountryStatsDisplay data={presentData} title={historyCountryStats ? \"Present statistics\" : null} />\r\n\r\n\r\n        \r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  return content;\r\n}\r\n\r\nexport default CountryStats;","import React from 'react';\nimport AllStats from './containers/AllStats/AllStats';\nimport CountryStats from './containers/CountryStats/CountryStats';\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport Container from '@material-ui/core/Container';\n\n\nconst app = () => (\n  <BrowserRouter basename=\"{process.env.PUBLIC_URL}\">\n    <Container fixed>\n      <Switch>\n        <Route path=\"/country/:name/:date?\">\n          <CountryStats />\n        </Route>\n        <Route path=\"/\">\n          <AllStats />\n        </Route>\n      </Switch>\n    </Container>\n  </BrowserRouter>\n);\n\n\n\nexport default app;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}